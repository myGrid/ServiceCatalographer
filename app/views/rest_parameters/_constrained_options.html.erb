<%

# ServiceCatalographer: app/views/rest_parameters/_constrained_options.html.erb
#
# Copyright (c) 2009, University of Manchester, The European Bioinformatics 
# Institute (EMBL-EBI) and the University of Southampton.
# See license.txt for details

%>

<%
	main_div_id = "constraints_#{rand(10000000)}"
  
  meth = RestMethod.find(rest_method_id)
  can_edit = ServiceCatalographer::Auth.allow_user_to_curate_thing?(current_user, parameter, :rest_method => meth)
%>

<% unless parameter.nil? %>
	<div id="<%= main_div_id -%>" class="annotations_container">
		<div style="margin-top: 1em;">
		  <b>Constrained Values:</b> 

      <%= help_icon_with_tooltip("These are specified values (or range of values) accepted by the parameter.  " + 
            "For example, a parameter which accepts a boolean value only has two constrained values (possible values): <b>TRUE</b> and <b>FALSE</b>.  " + 
            "Another parameter may have the following constrained values: <b>apple</b>, <b>orange</b>, and <b>banana</b>.") %>
     
      <br />
      
      <% if parameter.constrained %>
         This parameter <b>is</b> constrained to the following set of values:
      <% else %>
         This parameter <b>is not</b> constrained to any set of values.
         <%= "<br />".html_safe unless can_edit %>
         <%= edit_constraint_by_popup(parameter, :rest_method_id => rest_method_id, 
                                                 :link_text => "Make Constrained",  
                                                 :class => "button_slim") if logged_in? -%>
         <br /><br />
      <% end %>
    </div>
		
		<div class="box_annotations">
      <% if parameter.constrained %><!--CONSTRAINED-->
        <% rounded(annotation_text_item_background_color, "#333", "100%") do %>
          <div class="text">
            <% parameter.constrained_options.each do |c| %>
              <pre style="margin-bottom: 5px;"><%=h c %></pre>
            <% end %>
      
            <% if can_edit %>
              <div class="actions">
                <%= edit_constraint_by_popup(parameter, :rest_method_id => rest_method_id, :class => "button_slim") -%>
                                      
                <%= link_to "delete", {:id => parameter.id, 
                                       :controller => :rest_parameters,
                                       :action => :remove_constrained_options,
                                       :rest_method_id => rest_method_id}, 
                                      :confirm => "Are you you want to delete these constrained values?  This cannot be undone.",
                                      :method => :put,
                                      :class => "button_slim" -%>
              </div>
            <% end %>
          </div>
         <% end %>
      <% end %>
		</div>
		
		<% unless logged_in? %>
			<div class="login_link_box">
				<small><%= link_to("Login to update this parameter's constrained values", login_path) -%></small>
			</div>
		<% end %>
	</div>  
<% end %>